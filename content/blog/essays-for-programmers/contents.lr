title:
Essays for Programmers
---
pub_date:
2020-11-10
---
author:
Guido Percú

---
twitter_handle:
@oumguido

---
image:

/static/images/essays-on-programming-large.png

---
description:
Essays are very powerful ways of transmitting profound ideas. Those are books, articles and essays that had the most impact on my career.

---
body:
<style>
article { width: 100% !important; }        
.bookshelf { margin: 2rem auto; text-align: center; position: relative; }
.book-grid { z-index: 2; position: relative; -webkit-transform: translateY(-15px); transform: translateY(-15px); }
.book-grid ul { list-style: none; padding: 0; margin: 0; display: grid; grid-template-columns: repeat(5, 1fr); }
.book-grid ul li {  padding-left: 1.5em; }
.book-grid ul img { display: block; box-shadow: 0px -5px 20px 2px rgba(0, 0, 0, 0.3); width: 200px; height: 300px; -o-object-fit: cover; object-fit: cover; }
.book-description { width: 200px; background-color: #000; height: 300px; font-size: 1.0em; padding: 5px;}
.book-description a { color: #fff; }
.shelf { position: absolute; bottom: 0; left: 0; width: 100%; height: 1rem; background-color: #f9f9f9; border-radius: 2px; z-index: 3; }
.shelf-shadows { position: absolute; bottom: 0; left: 0; width: 100%; height: 1rem; border-radius: 2px; z-index: 1;
  box-shadow: 0px -5px 3px 0px rgba(170, 170, 170, 0.2), 0px 15px 20px 0px rgba(170, 170, 170, 0.7), 0px 5px 5px 0px rgba(119, 119, 119, 0.3);
}

.book-grid ul li .book-description { display: none; }
.book-grid ul li:hover img { display: none; }
.book-grid ul li:hover { margin-bottom: -3em !important; }
.book-grid ul li:hover .book-description { display: block; }

@media screen and (max-width: 1024px) {
        .book-grid ul { grid-template-columns: repeat(3, 1fr); }
        .book-grid ul li {  padding-left: 1.0em; }
}

@media screen and (max-width: 800px) {
        .book-grid ul { grid-template-columns: repeat(1, 1fr); }
        .book-grid ul li {  padding-bottom: 1.5em; }
        .shelf-shadows, .shelf { display: none;}
        article { margin-bottom: -5em !important; }
}
</style>

<img src="/static/images/essays-on-programming-large.png" alt="Essays on Programming">

Peter Norvig "[Teach Yourself Programming in Ten Years](https://norvig.com/21-days.html)" is a classic. Read it if you ever found yourself in a hurry to learn a new language or the most hyped Javascript framework.

<blockquote class="otro-blockquote"> "Get interested in programming, and do some because it is fun. Make sure that it keeps being enough fun so that you will be willing to put in your ten years"</blockquote>

------

Patrick Mckenzie on "[Falsehoods Programmers Believe About Names](https://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/)".

<blockquote class="otro-blockquote">I have lived in Japan for several years, programming in a professional capacity, and I have broken many systems by the simple expedient of being introduced into them. (Most people call me Patrick McKenzie, but I’ll acknowledge as correct any of six different “full” names, any many systems I deal with will accept precisely none of them.) Similarly, I’ve worked with Big Freaking Enterprises which, by dint of doing business globally, have theoretically designed their systems to allow all names to work in them. I have never seen a computer system which handles names properly and doubt one exists, anywhere.</blockquote>

More essays like this can be found on [Awesome Falsehood](https://github.com/kdeldycke/awesome-falsehood). 

------

<blockquote class="otro-blockquote"> For a number of years I have been familiar with the observation that the quality of programmers is a decreasing function of the density of go to statements in the programs they produce.</blockquote>

[Edgar Dijkstra: Go To Statement Considered Harmful](https://homepages.cwi.nl/~storm/teaching/reader/Dijkstra68.pdf). Meyer explains why ["Considered Harmful" Essays are Considered Harmful](https://meyerweb.com/eric/comment/chech.html).

------

Joel Spolsky on his "[12 Steps to Better Code](https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/)" shares his experiences on what we should measure to improve the quality of our own software team.

<blockquote class="otro-blockquote">Of course, these are not the only factors that determine success or failure: in particular, if you have a great software team working on a product that nobody wants, well, people aren’t going to want it. And it’s possible to imagine a team of “gunslingers” that doesn’t do any of this stuff that still manages to produce incredible software that changes the world. But, all else being equal, if you get these 12 things right, you’ll have a disciplined team that can consistently deliver.</blockquote>

I also recommend reading "[Can Your Programming Language do this](https://www.joelonsoftware.com/2006/08/01/can-your-programming-language-do-this/)", "[Getting your resume read](https://www.joelonsoftware.com/2004/01/26/getting-your-resume-read/)", "[Advice for Computer Science College Students](https://www.joelonsoftware.com/2005/01/02/advice-for-computer-science-college-students/)", "[Things you should never do](https://www.joelonsoftware.com/2000/04/06/things-you-should-never-do-part-i/)" and "[The Absolute Minimum Every Sofware Developer Absolutely Positively Must Know About Unicode and Character Sets: No Excuses](https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/)"

------

[How to Build a Strong Career in Tech](https://www.linkedin.com/pulse/how-build-strong-career-tech-thiago-ghisi/) by [Thiago Ghisi](https://twitter.com/thiagoghisi/), this article is based on a excellent [talk at The Conf](https://www.youtube.com/watch?v=qoqkrLLIvyI). There is some great advice on how to manage your career that can be learned from this article.

<blockquote class="otro-blockquote">You will be good at everything that you put the effort into.<br><br>

Do you want to be a better leader? Put the effort into it. How? Do the  work that nobody is doing but that is critical for success.<br><br>

The more meetings you facilitate, the better you will be at it.<br><br>

The more critical communication you do, the better you will be at it.<br><br>

The more feedback you give, the more comfortable and skilled you will be next time you need to give feedback to someone.</blockquote>

----------

[Paul Graham](https://twitter.com/paulg) is a programmer and investor who writes some of my favorite [essays](http://paulgraham.com/articles.html). A short list of the most influentional on my way of thinking:

[Hackers and Painters](http://paulgraham.com/hp.html) - that is also the title of [his book](http://paulgraham.com/hackpaint.html).

> ### **Hacking** and **painting** have a lot in common. In fact, of all the different types of people I've known, hackers and painters are among the most alike.

*[Maker's Schedule, Manager's Schedule](http://paulgraham.com/makersschedule.html)* 

<blockquote class="otro-blockquote">One reason programmers dislike meetings so much is that they're on a different type of schedule from other people. Meetings cost them more.
<br>There are two types of schedule, which I'll call the manager's schedule and the maker's schedule. The manager's schedule is for bosses. It's embodied in the traditional appointment book, with each day cut into one hour intervals. You can block off several hours for a single task if you need to, but by default you change what you're doing every hour.</blockquote>

[Writing, Briefly](http://paulgraham.com/writing44.html) and [How to Write Usefully](http://paulgraham.com/useful.html)

> ### I think it's far more important to write well than most people realize. **Writing doesn't just communicate ideas; it generates them.** If you're bad at writing and don't like to do it, you'll miss out on most of the ideas writing would have generated.

------

On *[Why the next language you learn should be functional](http://queue.acm.org/detail.cfm?id=2038036) Yaron Minsky argues in favor of functional programming.

<blockquote class="otro-blockquote">"I've been using OCaml in a production environment for nearly a decade, and over that time I have become convinced that functional languages, and in particular, statically typed ones such as OCaml and Haskell, are excellent general-purpose programming tools—better than any existing mainstream language. They also have an enormous range, being well suited for small scripting tasks as well as large-scale high-performance applications. They are not the right tool for every job, but they come surprisingly close."</blockquote>

------

[Alan Turing](https://en.wikipedia.org/wiki/Alan_Turing) is considered the father of Computer Science and a personal hero.

<article>
  <div class="bookshelf">
          <div class="book-grid">
                  <ul>
                    <li>
                            <a href="http://www.abelard.org/turpap/turpap.htm" target="_blank">
                                    <img src="/static/images/paper-turing-1.png" alt="Computing Machinery and Intelligence" class="book-image">
                            </a>
                            <p class="book-description">
                                    <a href="http://www.abelard.org/turpap/turpap.htm" target="_blank">Computing Machinery and Intelligence</a>
                            </p>
                    </li>

                    <li>
                            <a href="http://web.comlab.ox.ac.uk/oucl/research/areas/ieg/e-library/sources/tp2-ie.pdf" target="_blank">
                                    <img src="/static/images/paper-turing-2.jpg" alt="On computable numbers, with an application to the Entscheidungsproblem" class="book-image">
                            </a>
                            <p class="book-description">
                                    <a href="http://web.comlab.ox.ac.uk/oucl/research/areas/ieg/e-library/sources/tp2-ie.pdf" target="_blank">On computable numbers, with an application to the Entscheidungsproblem</a>
                            </p>
                    </li>
    
                    <li>
                            <a href="https://www.amazon.com/Annotated-Turing-Through-Historic-Computability/dp/0470229055" target="_blank">
                                    <img src="/static/images/book-turing.jpg" alt="The Annotated Turing: A Guided Tour Through Alan Turing's Historic Paper on Computability and the Turing Machine" class="book-image">
                            </a>
                            <p class="book-description">
                                    <a href="https://www.amazon.com/Annotated-Turing-Through-Historic-Computability/dp/0470229055" target="_blank">The Annotated Turing: A Guided Tour Through Alan Turing's Historic Paper on Computability and the Turing Machine</a>
                            </p>
                    </li>
                  </ul>
          </div>
  </div>
</article>

------

This blog post was inspired by [Essays on programming I think about a lot](https://www.benkuhn.net/progessays/).